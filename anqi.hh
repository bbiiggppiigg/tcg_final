#ifndef ANQI
#define ANQI

unsigned int zobrist_table[32][15] = {{1030024308,752866089,446709699,247081181,1607519416,87061805,811393028,561463146,467949904,748921214,717188631,2111094253,436294437,1291431801,477059178,1377150395}{187941399,1930131903,1986405786,741269040,956119033,2019940777,1723147263,2119069446,1331377074,1822364625,1070478861,2067705908,1352820002,1436402825,1758603848,1037439675}{828887732,389693635,1903283742,1720929729,1356197507,220070891,764624903,508601073,1073318851,407293957,1359152310,489321031,1303683654,235522437,613237238,904237113}{1918872019,1720096334,234229624,359765617,1414258614,1095520502,2035771383,1500170077,1900468359,1647427882,813752003,1554050325,1227697461,888346651,1135849413,1238946108}{965795844,1449346082,252592253,1890309699,562037375,1529082119,346370384,1766360518,407289898,1290932697,678552838,1299382696,963765329,1682218829,1429646248,2017447500}{620830017,1814538593,534861504,50751386,427536643,128076039,795373179,1898800525,1533429255,394241138,1023755371,617540633,216952880,2047305201,2075520973,1704114990}{71236891,1130035658,163929938,2096432512,977032855,1331229023,1481555115,423930840,1802370781,41391685,2032831814,1486957775,1032124286,1687457983,1437277999,1435267737}{2008532655,1112885392,1829701621,1976802754,404383741,1839275879,1830083435,1951499711,337902146,1174605154,1919140054,1929993285,1804136707,1804022556,2032970346,1667781452}{1446303120,649137447,836144969,2102991662,1695000908,1509683301,727950602,451430855,138655134,357080143,1376653683,429637403,1075811007,1490770556,689025143,1213753777}{612567186,380091384,1579524710,2026440403,1440695448,890274611,1326818428,367128948,615711205,1682011189,87324415,930112004,858984715,1571029871,987602032,726244161}{1836048026,1266649239,568367162,539629878,735918265,1219956782,1787257165,1577401566,702497547,11181223,1091737672,734773336,1304487902,867616691,619762507,1052767199}{740545960,1688215355,1281527321,1516188284,535533886,614057425,1804218140,1025183340,995095499,2114892504,1996473231,293609042,1917231735,2069130557,1674575628,1819385861}{398516194,2007661212,1498928420,359291983,2043826564,1592127383,1238684461,863262009,445066131,540921216,964599561,670770524,1498533765,168776339,1945515533,693553909}{19312647,317627432,1867386829,1844417745,202595770,1265525895,1015677377,142165236,1369305988,1490979064,2045935452,528986000,85403420,856203744,2075890508,1472438794}{1824746377,298395432,757709879,251909643,1155101664,541497968,2068135837,2136185764,1242525002,986725186,1021478968,1012741058,183575684,1570003896,923909383,1838232271}{1470032955,44515950,855262494,1288687287,1594652614,730568938,1508131067,409357528,1681851755,1702684471,1798307822,474716476,658063527,532916239,1716420883,737950430}{1014815585,690412621,910776406,155619826,2014817183,1510248785,1642105602,1556505217,1684878012,1025378342,2125010466,250368805,1028041162,1781869619,1223229118,950833495}{1232733138,1771107757,737240832,1973503881,794800052,856189624,1838575668,799055393,1508745460,2145526091,1459094660,888185527,575321992,1465340750,639521454,281424143}{1136580707,644902484,526082179,673007754,444952729,782457449,1719974762,338452667,1837277013,447397278,1065803199,793265966,842609986,1238866384,1773358223,2053600895}{513067681,981671862,1989608380,880175223,1237612425,25422133,2068027225,310743880,2139645303,1404938506,1218771577,1194869553,1052994174,260347491,1236092298,246451408}{1760342840,199907161,1175231019,1700634874,1710469395,1643023023,1943214435,673705469,1434030499,541626412,2079410498,503368608,1178109123,680804921,495436031,999273598}{1469242046,1784093916,2099766798,1181802835,483996742,2012671605,1956741338,387097608,1221530893,326053331,1747550620,2096913968,478929259,595347057,871675626,118806348}{1765982773,500980624,1845451328,394156075,1741585177,619961229,97720559,1711928805,401523129,1005610229,594816913,551480006,185040390,417513874,1326605569,1084575029}{611316667,837455021,498715509,282885522,2075657443,1850282633,2137004271,2114270269,128504174,1548587183,1750466688,1715144963,768399460,1670554809,813473985,1176369093}{1500891769,1145043921,1152219480,1492755361,1835388073,912237403,1088276288,541350917,1744133327,497045339,129625743,1071444543,1118054106,653448292,274072886,2138055834}{460536787,710715321,688355433,695356042,242990920,1581979493,334305344,852696056,1104236761,353564753,275552422,1234813622,230580346,1303376034,1507804038,1355432066}{240205886,2018553289,2025956564,1898747963,650019721,632138558,751142597,1544750713,1695424808,44236013,445328629,657757808,1837147947,425668663,945190884,886650529}{546414370,946242018,1373190491,205827928,1901314226,831529022,1832181725,710237742,1251619768,1371118411,1887601367,140258038,1527283907,188592358,2133381581,1357261555}{923656451,1882171441,1221288577,548415613,221394767,1540172365,2056541264,539725583,196948553,842030244,85077178,1815505391,1751449961,1061145098,1961457398,193023089}{1438749853,402914151,762196866,502772507,1896857851,1095162042,306101457,1423853234,1291025317,87733531,1363673675,1317974941,2058498229,1218181633,2017098980,1205705318}{633586534,1464955112,600554529,346828003,867628463,817614511,2046712871,710165251,33263531,714417297,630440302,125841416,1892770064,1111202637,1464925747,107016974}{1190469479,115394454,256855137,522157089,1276013181,1181834125,1009887772,1620521763,1721659487,736338331,1837555103,826288614,1803473996,1403257014,875222944,1756521505}}

// (color)
//  0 = 紅方 (大寫字母)
//  1 = 黑方 (小寫字母)
// -1 = 都不是
typedef int CLR;

// (level)
enum LVL {
	LVL_K=0, // 帥將 King
	LVL_G=1, // 仕士 Guard
	LVL_M=2, // 相象 Minister
	LVL_R=3, // 硨車 Rook     // BIG5 沒有人部的車
	LVL_N=4, // 傌馬 kNight
	LVL_C=5, // 炮砲 Cannon
	LVL_P=6  // 兵卒 Pawn
};

enum FIN {
	FIN_K= 0 /* 'K' 帥 */ , FIN_k= 7 /* 'k' 將 */ , FIN_X=14 /* 'X' 未翻 */ ,
	FIN_G= 1 /* 'G' 仕 */ , FIN_g= 8 /* 'g' 士 */ , FIN_E=15 /* '-' 空格 */ ,
	FIN_M= 2 /* 'M' 相 */ , FIN_m= 9 /* 'm' 象 */ ,
	FIN_R= 3 /* 'R' 硨 */ , FIN_r=10 /* 'r' 車 */ ,
	FIN_N= 4 /* 'N' 傌 */ , FIN_n=11 /* 'n' 馬 */ ,
	FIN_C= 5 /* 'C' 炮 */ , FIN_c=12 /* 'c' 砲 */ ,
	FIN_P= 6 /* 'P' 兵 */ , FIN_p=13 /* 'p' 卒 */
};

// (position)
//  0  1  2  3
//  4  5  6  7
//  8  9 10 11
// 12 13 14 15
// 16 17 18 19
// 20 21 22 23
// 24 25 26 27
// 28 29 30 31
typedef int POS;

struct MOV {
	POS st; // 起點
	POS ed; // 終點 // 若 ed==st 表示是翻子

	MOV() {}
	MOV(POS s,POS e):st(s),ed(e) {}

	bool operator==(const MOV &x) const {return st==x.st&&ed==x.ed;}
	MOV operator=(const MOV &x) {st=x.st;ed=x.ed;return MOV(x.st, x.ed);}
};

struct MOVLST {
	int num;     // 走法數(移動+吃子,不包括翻子)
	MOV mov[68];
};

struct BOARD {
	CLR who;     // 現在輪到那一方下
	FIN fin[32]; // 各個位置上面擺了啥
	int cnt[14]; // 各種棋子的未翻開數量

	void NewGame();              // 開新遊戲
	int  LoadGame(const char*);  // 載入遊戲並傳回時限(單位:秒)
	void Display() const;        // 顯示到 stderr 上
	int  MoveGen(MOVLST&) const; // 列出所有走法(走子+吃子,不包括翻子)
	                             // 回傳走法數量
	bool ChkLose() const;        // 檢查當前玩家(who)是否輸了
	bool ChkValid(MOV) const;    // 檢查是否為合法走法
	void Flip(POS,FIN=FIN_X);    // 翻子
	void Move(MOV);              // 移動 or 吃子
	void DoMove(MOV m, FIN f) ;
	void Init(int Board[32], int Piece[14], int Color);
	void Init(char Board[32], int Piece[14], int Color);
};

CLR  GetColor(FIN);    // 算出棋子的顏色
LVL  GetLevel(FIN);    // 算出棋子的階級
bool ChkEats(FIN,FIN); // 判斷第一個棋子能否吃第二個棋子
void Output (MOV);     // 將答案傳給 GUI

#endif
